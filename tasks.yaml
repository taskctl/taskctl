output: cockpit
pipelines:
  build:
    - name: Build "darwin"
      task: build
      env:
        GOOS: darwin
        BIN_OUT: bin/taskctl_darwin_amd64
    - name: Build "linux"
      task: build
      env:
        GOOS: linux
        BIN_OUT: bin/taskctl_linux_amd64

  fixcs:
    - task: goimports
      dir: "{{.Root}}"
    - task: gofmt
      dir: "{{.Root}}"
      depends_on: goimports

  prepare:
    - task: tidy
    - task: test
    - task: goimports
      depends_on: test
    - task: gofmt
      depends_on: goimports
    - pipeline: lints
    - task: update-completers
      depends_on: test

  lints:
    - task: golangci-lint

tasks:
  test:
    command:
      - go test ./...

  build:
    command:
      - GOOS=${GOOS} GOARCH=amd64 go build -o bin/taskctl_${GOOS} ./cmd/taskctl
    variations:
      - GOOS: linux
      - GOOS: darwin
      - GOOS: windows

  golangci-lint:
    command:
      - golangci-lint run

  goimports:
    command:
      - goimports -v -local github.com/taskctl/taskctl -w -format-only $(ls -d internal/**/*.go)
      - goimports -v -local github.com/taskctl/taskctl -w -format-only $(ls -d pkg/**/*.go)
      - goimports -v -local github.com/taskctl/taskctl -w -format-only $(ls -d cmd/**/*.go)

  goreleaser:
    command:
      - goreleaser --clean

  gofmt:
    dir: "{{.Root}}"
    command:
      - go fmt -x ./...
      - gofmt -s -w cmd/**/*.go
      - gofmt -s -w internal/**/*.go
      - gofmt -s -w pkg/**/*.go

  tidy:
    command:
      - go mod tidy

  update-completers:
    dir: "{{.Root}}/cmd/taskctl"
    command:
      - rm -rf ../../autocomplete/*
      - go run . completion bash > ./../../autocomplete/bash_completion.bash
      - go run . completion zsh > ./../../autocomplete/zsh_completion.zsh
